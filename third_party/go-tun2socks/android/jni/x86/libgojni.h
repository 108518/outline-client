/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package gobind */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h> /* for ptrdiff_t below */

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 7 "go_intramain.go"

#include <stdlib.h>
#include <stdint.h>
#include "seq.h"
#include "intra.h"


#line 1 "cgo-generated-wrapper"

#line 7 "go_main.go"

#include <stdlib.h>
#include <stdint.h>
#include "seq.h"
#include "universe.h"


#line 1 "cgo-generated-wrapper"

#line 7 "go_tun2socksmain.go"

#include <stdlib.h>
#include <stdint.h>
#include "seq.h"
#include "tun2socks.h"


#line 1 "cgo-generated-wrapper"

#line 7 "go_tunnelmain.go"

#include <stdlib.h>
#include <stdint.h>
#include "seq.h"
#include "tunnel.h"


#line 1 "cgo-generated-wrapper"

#line 11 "seq.go"


 #include <stdlib.h>
 #include "seq.h"

#line 1 "cgo-generated-wrapper"

#line 11 "seq_android.go"


#include <jni.h>
#include <stdint.h>
#include <stdlib.h>
#include "seq_android.h"

#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt32 GoInt;
typedef GoUint32 GoUint;
typedef __SIZE_TYPE__ GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_32_bit_pointer_matching_GoInt[sizeof(void*)==32/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif


extern void proxyintra_RetryStats_Bytes_Set(int32_t p0, int32_t p1);

extern int32_t proxyintra_RetryStats_Bytes_Get(int32_t p0);

extern void proxyintra_RetryStats_Chunks_Set(int32_t p0, int16_t p1);

extern int16_t proxyintra_RetryStats_Chunks_Get(int32_t p0);

extern void proxyintra_RetryStats_Split_Set(int32_t p0, int16_t p1);

extern int16_t proxyintra_RetryStats_Split_Get(int32_t p0);

extern void proxyintra_RetryStats_Timeout_Set(int32_t p0, char p1);

extern char proxyintra_RetryStats_Timeout_Get(int32_t p0);

extern int32_t new_intra_RetryStats();

extern void proxyintra_TCPSocketSummary_DownloadBytes_Set(int32_t p0, int64_t p1);

extern int64_t proxyintra_TCPSocketSummary_DownloadBytes_Get(int32_t p0);

extern void proxyintra_TCPSocketSummary_UploadBytes_Set(int32_t p0, int64_t p1);

extern int64_t proxyintra_TCPSocketSummary_UploadBytes_Get(int32_t p0);

extern void proxyintra_TCPSocketSummary_Duration_Set(int32_t p0, int32_t p1);

extern int32_t proxyintra_TCPSocketSummary_Duration_Get(int32_t p0);

extern void proxyintra_TCPSocketSummary_ServerPort_Set(int32_t p0, int16_t p1);

extern int16_t proxyintra_TCPSocketSummary_ServerPort_Get(int32_t p0);

extern void proxyintra_TCPSocketSummary_Synack_Set(int32_t p0, int32_t p1);

extern int32_t proxyintra_TCPSocketSummary_Synack_Get(int32_t p0);

extern void proxyintra_TCPSocketSummary_Retry_Set(int32_t p0, int32_t p1);

extern int32_t proxyintra_TCPSocketSummary_Retry_Get(int32_t p0);

extern int32_t new_intra_TCPSocketSummary();

extern void proxyintra_UDPSocketSummary_UploadBytes_Set(int32_t p0, int64_t p1);

extern int64_t proxyintra_UDPSocketSummary_UploadBytes_Get(int32_t p0);

extern void proxyintra_UDPSocketSummary_DownloadBytes_Set(int32_t p0, int64_t p1);

extern int64_t proxyintra_UDPSocketSummary_DownloadBytes_Get(int32_t p0);

extern void proxyintra_UDPSocketSummary_Duration_Set(int32_t p0, int32_t p1);

extern int32_t proxyintra_UDPSocketSummary_Duration_Get(int32_t p0);

extern int32_t new_intra_UDPSocketSummary();

extern int32_t proxyintra_DuplexConn_CloseRead(int32_t p0);

extern int32_t proxyintra_DuplexConn_CloseWrite(int32_t p0);

/* Return type for proxyintra_DuplexConn_Read */
struct proxyintra_DuplexConn_Read_return {
	nint r0;
	int32_t r1;
};

extern struct proxyintra_DuplexConn_Read_return proxyintra_DuplexConn_Read(int32_t p0, nbyteslice p1);

/* Return type for proxyintra_DuplexConn_Write */
struct proxyintra_DuplexConn_Write_return {
	nint r0;
	int32_t r1;
};

extern struct proxyintra_DuplexConn_Write_return proxyintra_DuplexConn_Write(int32_t p0, nbyteslice p1);

extern void proxyintra_TCPListener_OnTCPSocketClosed(int32_t p0, int32_t p1);

extern void proxyintra_UDPListener_OnUDPSocketClosed(int32_t p0, int32_t p1);

extern nstring proxy_error_Error(int32_t p0);

extern void proxytun2socks_IntraTunnel_Disconnect(int32_t p0);

extern char proxytun2socks_IntraTunnel_IsConnected(int32_t p0);

/* Return type for proxytun2socks_IntraTunnel_Write */
struct proxytun2socks_IntraTunnel_Write_return {
	nint r0;
	int32_t r1;
};

extern struct proxytun2socks_IntraTunnel_Write_return proxytun2socks_IntraTunnel_Write(int32_t p0, nbyteslice p1);

extern void proxytun2socks_OutlineTunnel_Disconnect(int32_t p0);

extern char proxytun2socks_OutlineTunnel_IsConnected(int32_t p0);

extern void proxytun2socks_OutlineTunnel_SetUDPEnabled(int32_t p0, char p1);

/* Return type for proxytun2socks_OutlineTunnel_Write */
struct proxytun2socks_OutlineTunnel_Write_return {
	nint r0;
	int32_t r1;
};

extern struct proxytun2socks_OutlineTunnel_Write_return proxytun2socks_OutlineTunnel_Write(int32_t p0, nbyteslice p1);

/* Return type for proxytun2socks__ConnectIntraTunnel */
struct proxytun2socks__ConnectIntraTunnel_return {
	int32_t r0;
	int32_t r1;
};

extern struct proxytun2socks__ConnectIntraTunnel_return proxytun2socks__ConnectIntraTunnel(nint p0, nstring p1, nstring p2, nstring p3, int32_t p4);

/* Return type for proxytun2socks__ConnectSocksTunnel */
struct proxytun2socks__ConnectSocksTunnel_return {
	int32_t r0;
	int32_t r1;
};

extern struct proxytun2socks__ConnectSocksTunnel_return proxytun2socks__ConnectSocksTunnel(nint p0, nstring p1, nint p2, char p3);

extern void proxytunnel_IntraListener_OnTCPSocketClosed(int32_t p0, int32_t p1);

extern void proxytunnel_IntraListener_OnUDPSocketClosed(int32_t p0, int32_t p1);

extern void proxytunnel_OutlineTunnel_Disconnect(int32_t p0);

extern char proxytunnel_OutlineTunnel_IsConnected(int32_t p0);

extern void proxytunnel_OutlineTunnel_SetUDPEnabled(int32_t p0, char p1);

/* Return type for proxytunnel_OutlineTunnel_Write */
struct proxytunnel_OutlineTunnel_Write_return {
	nint r0;
	int32_t r1;
};

extern struct proxytunnel_OutlineTunnel_Write_return proxytunnel_OutlineTunnel_Write(int32_t p0, nbyteslice p1);

extern void proxytunnel_Tunnel_Disconnect(int32_t p0);

extern char proxytunnel_Tunnel_IsConnected(int32_t p0);

/* Return type for proxytunnel_Tunnel_Write */
struct proxytunnel_Tunnel_Write_return {
	nint r0;
	int32_t r1;
};

extern struct proxytunnel_Tunnel_Write_return proxytunnel_Tunnel_Write(int32_t p0, nbyteslice p1);

// IncGoRef is called by foreign code to pin a Go object while its refnum is crossing
// the language barrier

extern void IncGoRef(int32_t p0);

// DestroyRef is called by Java to inform Go it is done with a reference.

extern void DestroyRef(int32_t p0);

#ifdef __cplusplus
}
#endif
